plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
}

android {
    compileSdk 34

    defaultConfig {
        minSdk 28
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        testOptions {
            unitTests.all {
                useJUnitPlatform()
                maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlin {
        jvmToolchain(libs.versions.java.get().toInteger())
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.androidx.compose.compiler.get()
    }

    namespace 'com.example.features'

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'LICENSE.txt'
    }
}

dependencies {
    testImplementation project(path: ':utils')
    androidTestImplementation libs.bundles.junit5
    implementation(platform(libs.androidx.compose.bom))
    implementation libs.androidx.compose.material
    implementation libs.androidx.compose.ui.tooling
    implementation libs.androidx.compose.runtime.rxjava3
    implementation libs.koin.core
    implementation libs.koin.android
    implementation libs.koin.android.compose
    implementation libs.rxjava3
    implementation libs.rxjava3.android
    implementation project(':domainmodels')
    implementation project(':utils')
    implementation project(':viewmodels')
    implementation project(':logic')
    implementation project(':repositories')
    implementation project(':uicomponents')
    implementation libs.rebugger
    testImplementation libs.bundles.junit5
    testImplementation libs.koin.test
    testImplementation libs.kluent
    testImplementation(testFixtures(project(':interfaces')))
    testImplementation(testFixtures(project(":utils")))
}
